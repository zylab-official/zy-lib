{
    "pipes": [],
    "interfaces": [
        {
            "name": "Schema",
            "id": "interface-Schema-8e19e1f51cd49da50958deaa9b1a042f",
            "file": "projects/zy-lib/schematics/zy-add-story/schema.ts",
            "type": "interface",
            "sourceCode": "export interface Schema {\r\n    // The name of the service.\r\n    name: string;\r\n\r\n    // The path to create the service.\r\n    path?: string;\r\n\r\n    // The name of the project.\r\n    project?: string;\r\n}",
            "properties": [
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "path",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "project",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "SplitButtonItem",
            "id": "interface-SplitButtonItem-bf2149160182b7c1fbf67bcb8e07e6bb",
            "file": "projects/zy-lib/src/lib/split-button/models/split-button-item.interface.ts",
            "type": "interface",
            "sourceCode": "export interface SplitButtonItem {\r\n    title: string;\r\n    onClick?: (event: Event) => any;\r\n    isDisabled?: boolean;\r\n}",
            "properties": [
                {
                    "name": "isDisabled",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "onClick",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ZyLibService",
            "id": "injectable-ZyLibService-9a8c82be627c203cc752a5efce925f69",
            "file": "projects/zy-lib/src/lib/zy-lib.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ZyLibService {\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-3a7f7505fc56a20a10bfd96ed474fd04",
            "file": "projects/zy-lib/src/lib/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zy-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "line": 13,
                    "type": "ButtonType"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_buttonType",
                    "defaultValue": "'default'",
                    "type": "ButtonType",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        113
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clickHandler",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { ButtonComponentBase } from '../shared/components/button/button.component.base';\r\nimport { ButtonType } from './models/button.types';\r\n\r\n@Component({\r\n    selector: 'zy-button',\r\n    templateUrl: './button.component.html',\r\n    styleUrls: ['./button.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ButtonComponent extends ButtonComponentBase {\r\n    @Input()\r\n    get type(): ButtonType {\r\n        return this._buttonType;\r\n    }\r\n    set type(value: ButtonType) {\r\n        this._buttonType = value;\r\n    };\r\n\r\n    protected _buttonType: ButtonType = 'default';\r\n\r\n\r\n    clickHandler(e: Event): void {\r\n        if (this.isLoading) return;\r\n\r\n        this.onClick.emit(e);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@mixin zy-button-bgc-feedback($color, $step: 2) {\r\n    $base-darken: 2%;\r\n\r\n    &:hover {\r\n        background-color: darken($color, $base-darken);\r\n    }\r\n\r\n    &:active {\r\n        background-color: darken($color, $base-darken * $step);\r\n    }\r\n}\r\n\r\n@mixin disabled {\r\n    &:disabled {\r\n        border: 1px solid #ccc !important;\r\n        background-color: white !important;\r\n        color: #ccc !important;\r\n        cursor: default;\r\n\r\n        &:hover,\r\n        &:active {\r\n            background-color: #fff !important;\r\n            color: #ccc !important;\r\n\r\n            .title,\r\n            ::ng-deep [icon] {\r\n                color: #ccc !important;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n%button-base {\r\n    display: inline-block;\r\n    height: 40px;\r\n    border: none;\r\n    line-height: 1;\r\n    font-weight: bold;\r\n    font-size: 1.3em;\r\n    text-align: center;\r\n    outline: none;\r\n    transition: background-color 0.15s ease-in-out;\r\n    cursor: pointer;\r\n}\r\n\r\n:host {\r\n    font-size: 10px;\r\n\r\n    .zy-button {\r\n        @extend %button-base;\r\n\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        box-sizing: border-box;\r\n        padding: 0 10px;\r\n        width: 127px;\r\n        border-radius: 5px;\r\n        background-color: #2196f3;\r\n        color: white;\r\n\r\n        @include zy-button-bgc-feedback(#2196f3, 3);\r\n        @include disabled;\r\n\r\n        &__wrapper {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        // Coloring\r\n        &.is-secondary {\r\n            background-color: #efeeea;\r\n            color: #757575;\r\n\r\n            @include zy-button-bgc-feedback(#efeeea);\r\n            @include disabled;\r\n        }\r\n\r\n        // Shape\r\n        &.is-round {\r\n            width: 40px;\r\n            border-radius: 50%;\r\n            font-size: 1.4em;\r\n\r\n            @include disabled;\r\n\r\n            ::ng-deep [icon],\r\n            ::ng-deep zy-loader {\r\n                & + .title {\r\n                    margin-left: 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        &.is-outlined {\r\n            @extend .zy-button;\r\n\r\n            border: 1px solid #2196f3;\r\n            background-color: #bbdefb;\r\n            color: #2196f3;\r\n\r\n            &.is-secondary {\r\n                border-color: #9e9e9e;\r\n                background-color: #efeeea;\r\n                color: #757575;\r\n\r\n                @include zy-button-bgc-feedback(#efeeea, 3);\r\n                @include disabled;\r\n            }\r\n        }\r\n\r\n        &.is-ghost {\r\n            @extend .zy-button;\r\n\r\n            background-color: transparent;\r\n            color: #2196f3;\r\n\r\n            .title,\r\n            ::ng-deep [icon] {\r\n                transition: color 0.15s ease-in-out;\r\n            }\r\n\r\n            &.is-secondary {\r\n                background-color: transparent;\r\n                color: #757575;\r\n\r\n                &:hover {\r\n                    .title,\r\n                    ::ng-deep [icon] {\r\n                        color: darken(#757575, 10%);\r\n                    }\r\n                }\r\n            }\r\n\r\n            &:hover {\r\n                .title,\r\n                ::ng-deep [icon] {\r\n                    color: darken(#2196f3, 10%);\r\n                }\r\n            }\r\n\r\n            @include disabled;\r\n            &:disabled {\r\n                border: none !important;\r\n                background-color: transparent !important;\r\n            }\r\n        }\r\n\r\n        ::ng-deep [icon],\r\n        ::ng-deep zy-loader {\r\n            & + .title {\r\n                margin-left: 10px;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ButtonComponentBase",
            "accessors": {
                "type": {
                    "name": "type",
                    "setSignature": {
                        "name": "type",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<button\r\n    class=\"zy-button\"\r\n    [ngClass]=\"{ 'is-secondary': color === 'secondary', 'is-round': type === 'round', 'is-outlined': type === 'outlined', 'is-ghost': type === 'ghost' }\"\r\n    (click)=\"clickHandler($event)\"\r\n    [disabled]=\"isDisabled\"\r\n>\r\n    <span class=\"zy-button__wrapper\">\r\n        <ng-content select=\"[icon]\" *ngIf=\"!isLoading; else loading\"></ng-content>\r\n        <ng-template #loading>\r\n            <zy-loader [color]=\"color\"></zy-loader>\r\n        </ng-template>\r\n        <span *ngIf=\"type !== 'round'\" class=\"title\">\r\n            <ng-content></ng-content>\r\n        </span>\r\n    </span>\r\n</button>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-b045f8dd69807c9b8d527e5d212df13e",
            "file": "projects/zy-lib/src/lib/checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zy-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autofocus",
                    "defaultValue": "false",
                    "line": 17
                },
                {
                    "name": "checked",
                    "line": 9,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "indeterminate",
                    "line": 16,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "checkedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "line": 42,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_checked",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "checkbox",
                    "type": "HTMLInputElement",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ignoreTimeout",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53
                }
            ],
            "hostBindings": [
                {
                    "name": "class.checkbox",
                    "defaultValue": "true",
                    "line": 20
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 23
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnDestroy, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'zy-checkbox',\r\n    templateUrl: './checkbox.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CheckboxComponent implements OnDestroy {\r\n    @Input() set checked(checked: boolean) {\r\n        this._checked = checked;\r\n        this.checkbox.checked = checked;  // selection is not always updated based on the model in IE, hence explicitly setting the value via DOM\r\n    }\r\n    get checked(): boolean {\r\n        return this._checked;\r\n    }\r\n    @Input() indeterminate: boolean;\r\n    @Input() autofocus = false;\r\n\r\n    @Input() @HostBinding('class.is-disabled') disabled: boolean;\r\n    @HostBinding('class.checkbox') isCheckbox = true;\r\n\r\n    // handling 'click' on the element rather than on checkbox as FireFox does not trigger 'click' on checkbox if SHIFT is pressed\r\n    @HostListener('click', ['$event']) onMouseClick(event: MouseEvent) {\r\n        if (!this.ignoreTimeout) {\r\n\r\n            this.checkedChange.next(!this._checked);\r\n\r\n            this.onClick.next(<any>{\r\n                shiftKey: event.shiftKey\r\n            });\r\n\r\n            // 'click' event might be triggered on the label element and/or bubbled up from the checkbox element -> ignore the second event\r\n            this.ignoreTimeout = window.setTimeout(() => {\r\n                this.ignoreTimeout = 0;\r\n            });\r\n        }\r\n        this.checkbox.checked = this.checked;\r\n        this.checkbox.indeterminate = this.indeterminate;\r\n        this.checkbox.focus();    // compensating for focus not being set due to [dr-prevent-default-on-mousedown]\r\n    }\r\n\r\n    @Output() checkedChange = new EventEmitter<boolean>();\r\n    @Output() onClick = new EventEmitter<MouseEvent>();\r\n\r\n    @ViewChild('checkbox', { static: true }) set checkboxRef(checkboxRef: ElementRef) {\r\n        this.checkbox = checkboxRef.nativeElement;\r\n    }\r\n\r\n    private _checked: boolean;\r\n    private checkbox: HTMLInputElement;\r\n    private ignoreTimeout: number;\r\n\r\n    ngOnDestroy() {\r\n        if (this.ignoreTimeout) {\r\n            window.clearTimeout(this.ignoreTimeout);\r\n        }\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "checked": {
                    "name": "checked",
                    "setSignature": {
                        "name": "checked",
                        "type": "void",
                        "args": [
                            {
                                "name": "checked",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 9,
                        "jsdoctags": [
                            {
                                "name": "checked",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "checked",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 13
                    }
                },
                "checkboxRef": {
                    "name": "checkboxRef",
                    "setSignature": {
                        "name": "checkboxRef",
                        "type": "void",
                        "args": [
                            {
                                "name": "checkboxRef",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 45,
                        "jsdoctags": [
                            {
                                "name": "checkboxRef",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<input #checkbox type=\"checkbox\" [ngModel]=\"checked\" [disabled]=\"disabled\" [indeterminate]=\"indeterminate\" />"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-9faf60fb1b9d21a562e108b14100e077",
            "file": "projects/zy-lib/src/lib/shared/components/loader/loader.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zy-loader",
            "styleUrls": [
                "./loader.component.scss"
            ],
            "styles": [],
            "template": "<span class=\"loader\" [class.is-primary]=\"color === 'primary'\">\n    <span></span>\n    <span></span>\n    <span></span>\n    <span></span>\n</span>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "line": 19,
                    "type": "Color"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Color } from '../../models/color.types';\r\n\r\n// @TODO: MOVE TO LOADERS MODULE\r\n@Component({\r\n    selector: 'zy-loader',\r\n    template: `\r\n        <span class=\"loader\" [class.is-primary]=\"color === 'primary'\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </span>\r\n    `,\r\n    styleUrls: ['./loader.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoaderComponent {\r\n    @Input() color: Color = 'primary';\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    .loader {\r\n        @keyframes loader-ring {\r\n            0% {\r\n                transform: rotate(0deg);\r\n            }\r\n            100% {\r\n                transform: rotate(360deg);\r\n            }\r\n        }\r\n\r\n        display: inline-block;\r\n        position: relative;\r\n        width: 20px;\r\n        height: 20px;\r\n\r\n        span {\r\n            box-sizing: border-box;\r\n            display: block;\r\n            position: absolute;\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 50%;\r\n            animation: loader-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n            border: 3px solid white;\r\n            border-color: white transparent transparent transparent;\r\n\r\n            &:nth-child(1) {\r\n                animation-delay: -0.45s;\r\n            }\r\n            &:nth-child(2) {\r\n                animation-delay: -0.3s;\r\n            }\r\n            &:nth-child(3) {\r\n                animation-delay: -0.15s;\r\n            }\r\n        }\r\n\r\n        &.is-secondary {\r\n            span {\r\n                border: 3px solid #757575;\r\n                border-color: #757575 transparent transparent transparent;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./loader.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageTitleComponent",
            "id": "component-PageTitleComponent-ef4abdb4a8da0f55ff1b7642160c763a",
            "file": "projects/zy-lib/src/lib/page-title/page-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "page-title",
            "styleUrls": [
                "./page-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n// import { Title } from '@angular/platform-browser';\r\n// import { ActivatedRoute } from '@angular/router';\r\n// import { ErrorDisplayService, PageTitle, PageTitleService } from 'app/core';\r\n// import { empty, of, Subscription } from 'rxjs';\r\n// import { filter, switchMap, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'page-title',\r\n    templateUrl: './page-title.component.html',\r\n    styleUrls: ['./page-title.component.scss']\r\n})\r\nexport class PageTitleComponent /* implements OnInit, OnDestroy */ {\r\n    @Input() title: string;\r\n    // @HostBinding('class.inactive') public inactive: boolean;\r\n\r\n    // public title: string;\r\n    // private subscriptions: Subscription[] = [];\r\n\r\n    // public constructor(\r\n    //     private errorDisplayService: ErrorDisplayService,\r\n    //     private titleService: PageTitleService,\r\n    //     private route: ActivatedRoute,\r\n    //     private browserTitle: Title\r\n    // ) {}\r\n\r\n    // ngOnInit() {\r\n    //     let ownDepth = this.route.snapshot.pathFromRoot.length;\r\n    //     this.subscriptions.push(this.titleService.activeTitleComponentObservable.pipe(\r\n    //         switchMap(c => {\r\n    //             if (c && c.component === this) {\r\n    //                 this.inactive = false;\r\n    //                 return this.titleService.titleObservable;\r\n    //             } else {\r\n    //                 this.inactive = true;\r\n    //                 if (!c || c.depth < ownDepth) {\r\n    //                     return of(new PageTitle(\"\")).pipe(\r\n    //                         tap(x => {\r\n    //                             this.titleService.registerTitleComponent(this, ownDepth);   // this call can trigger another notification,\r\n    //                             // therefore invoking it after returning an observable to ensure the observable from this switchMap execution\r\n    //                             // does not override the next one\r\n    //                         }),\r\n    //                         filter(x => false));\r\n    //                 } else {\r\n    //                     return empty();\r\n    //                 }\r\n    //             }\r\n    //         }))\r\n    //         .subscribe({\r\n    //             next: title => {\r\n    //                 this.title = title.text;\r\n\r\n    //                 let ediscoveryText = \"ZyLAB ONE eDiscovery\"; // TODO: i18n\r\n    //                 if (title && title.text && title.text.trim().length > 0)\r\n    //                     this.browserTitle.setTitle(`${title.text} - ${ediscoveryText}`);\r\n    //                 else\r\n    //                     this.browserTitle.setTitle(`${ediscoveryText}`);\r\n    //             },\r\n    //             error: e => this.errorDisplayService.show(e)\r\n    //         }));\r\n    // }\r\n\r\n    // ngOnDestroy() {\r\n    //     this.subscriptions.forEach(s => s.unsubscribe());\r\n    //     this.titleService.unregisterTitleComponent(this);\r\n    // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// :host {\r\n//   display: block;\r\n// }\r\n\r\n// :host(.inactive) {\r\n//   display: none;\r\n// }\r\n\r\n// .page-title {\r\n//   border: 0;\r\n//   border-bottom: solid 1px transparent;\r\n\r\n//   .page-title-text {\r\n//     color: $color-text-secondary;\r\n//     font-weight: normal;\r\n//     font-size: $font-size-title;\r\n//     line-height: normal;\r\n//     flex-shrink: 1;\r\n//     white-space: nowrap;\r\n//     margin-right: 10px;\r\n//     max-width: 40vw;  // using max-width because 'white-space: nowrap' with 'is-narrow' (flex: none) will lead to the fixed width\r\n\r\n//     span {\r\n//       @include overflow-ellipsis;\r\n//       display: inline-block;\r\n//       width: 100%;\r\n//       vertical-align: middle;\r\n//     }\r\n//   }\r\n\r\n//   .page-title-content-right {\r\n//     display: flex;\r\n//   }\r\n// }\r\n\r\n// .is-wide {\r\n//   padding: 0;\r\n// }\r\n\r\n// .is-icon {\r\n//   padding: 0;\r\n// }\r\n",
                    "styleUrl": "./page-title.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div *ngIf=\"!inactive\" class=\"columns is-mobile\">\r\n    <div class=\"column is-narrow is-icon\">\r\n        <ng-content select=\"[page-title-icon]\"></ng-content>\r\n    </div>\r\n    <div class=\"column is-wide\">\r\n        <div>\r\n            <div class=\"columns page-title is-gapless is-mobile is-centered\">\r\n                <div class=\"column page-title-text is-narrow\">\r\n                    <span data-test-page-title>{{title}}</span>\r\n                </div>\r\n                <div class=\"column is-narrow\">\r\n                    <ng-content select=\"[page-title-extra]\"></ng-content>\r\n                </div>\r\n                <div class=\"column has-text-centered\">\r\n                    <ng-content select=\"[page-title-content-centered]\"></ng-content>\r\n                </div>\r\n                <div class=\"column is-narrow\">\r\n                    <ng-content select=\"[page-title-content-right]\"></ng-content>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"columns is-gapless is-mobile\">\r\n                <ng-content select=\"[page-title-subheader]\"></ng-content>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "SplitButtonComponent",
            "id": "component-SplitButtonComponent-9eb11132669e2c96327f65d7812ac309",
            "file": "projects/zy-lib/src/lib/split-button/split-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zy-split-button",
            "styleUrls": [
                "./split-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./split-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "line": 18,
                    "type": "SplitButtonItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_animationTimer",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "isSplitClosed",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "animateSubMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "clickHandler",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectHandler",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event"
                        },
                        {
                            "name": "close",
                            "type": "boolean",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "close",
                            "type": "boolean",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 12
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { ButtonComponentBase } from '../shared/components/button/button.component.base';\r\nimport { SplitButtonItem } from './models/split-button-item.interface';\r\n\r\n@Component({\r\n    selector: 'zy-split-button',\r\n    templateUrl: './split-button.component.html',\r\n    styleUrls: ['./split-button.component.scss']\r\n})\r\nexport class SplitButtonComponent extends ButtonComponentBase {\r\n    @HostListener('document:click', ['$event'])\r\n    DocumentClick(event: Event) {\r\n        if (!this.elementRef.nativeElement.contains(event.target)) {\r\n            this.selectHandler(event, true);\r\n        }\r\n    }\r\n\r\n    @Input() items: SplitButtonItem[] = [];\r\n\r\n    isSplitClosed = true;\r\n\r\n    private _animationTimer: any;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    clickHandler(e: Event): void {\r\n        if (this.isLoading) return;\r\n\r\n        this.selectHandler(e, true);\r\n        this.onClick.emit(e);\r\n    }\r\n\r\n    selectHandler(e: Event, close?: boolean): void {\r\n        this.isSplitClosed = close || !this.isSplitClosed;\r\n\r\n        if (!this.isSplitClosed) this.animateSubMenu();\r\n    }\r\n\r\n    private animateSubMenu(): void {\r\n        if (this._animationTimer) clearTimeout(this._animationTimer);\r\n\r\n        this._animationTimer = setTimeout(() => {\r\n            this.elementRef.nativeElement.querySelector('.sub-menu')?.classList.add('is-opening');\r\n        }, 0);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../button/button.component.scss';\r\n\r\n:host {\r\n    .zy-split-button {\r\n        position: relative;\r\n        z-index: 20;\r\n        display: inline-block;\r\n        color: white;\r\n\r\n        &__wrapper {\r\n            position: relative;\r\n            z-index: 30;\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        &__left-part {\r\n            @extend %button-base;\r\n\r\n            padding: 0 10px;\r\n            width: 127px;\r\n            border-radius: 5px 0 0 5px;\r\n            background-color: #2196f3;\r\n            color: inherit;\r\n            font-size: 1.3em;\r\n\r\n            @include zy-button-bgc-feedback(#2196f3);\r\n            @include disabled;\r\n        }\r\n\r\n        &__right-part {\r\n            @extend .zy-split-button__left-part;\r\n\r\n            width: 40px;\r\n            border-radius: 0 5px 5px 0;\r\n            border-left: 1px solid white;\r\n            font-size: 1.8em;\r\n        }\r\n\r\n        &.is-secondary {\r\n            color: #757575;\r\n\r\n            .zy-split-button__left-part {\r\n                background-color: #efeeea;\r\n\r\n                @include zy-button-bgc-feedback(#efeeea, 3);\r\n            }\r\n\r\n            .zy-split-button__right-part {\r\n                background-color: #efeeea;\r\n                @include zy-button-bgc-feedback(#efeeea, 3);\r\n            }\r\n        }\r\n\r\n        .sub-menu {\r\n            position: absolute;\r\n            top: 100%;\r\n            z-index: 10;\r\n            box-sizing: border-box;\r\n            margin-top: -10px;\r\n            width: 100%;\r\n            color: black;\r\n            border: 1px solid #ccc;\r\n            border-radius: 3px;\r\n            font-size: 1.3em;\r\n            line-height: 1;\r\n            transform: translateY(-7px);\r\n            opacity: 0.45;\r\n            transition: all 0.15s ease-in-out;\r\n\r\n            &.is-opening {\r\n                transform: translateY(7px);\r\n                opacity: 1;\r\n            }\r\n\r\n            &__item {\r\n                background-color: #fff;\r\n                border-bottom: 1px solid #ccc;\r\n\r\n                &:last-child {\r\n                    border-bottom: none;\r\n                }\r\n            }\r\n\r\n            .item {\r\n                &__button {\r\n                    display: block;\r\n                    padding: 10px 5px;\r\n                    margin: 0;\r\n                    width: 100%;\r\n                    background: none;\r\n                    background-color: #fff;\r\n                    border: none;\r\n                    transition: background-color 0.15s ease-in-out;\r\n                    outline: none;\r\n                    cursor: pointer;\r\n\r\n                    &:hover {\r\n                        background-color: rgba(#ccc, 0.56);\r\n                    }\r\n\r\n                    &:active {\r\n                        background-color: darken(#ccc, 0.5%);\r\n                    }\r\n\r\n                    &[disabled] {\r\n                        cursor: default;\r\n\r\n                        &:hover {\r\n                            background-color: #fff;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./split-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "ButtonComponentBase",
            "templateData": "<div class=\"zy-split-button\" [ngClass]=\"{ 'is-secondary': color === 'secondary' }\">\r\n    <div class=\"zy-split-button__wrapper\">\r\n        <button class=\"zy-split-button__left-part\" (click)=\"clickHandler($event)\" [disabled]=\"isDisabled\">\r\n            <ng-content></ng-content>\r\n        </button>\r\n        <button class=\"zy-split-button__right-part\" (click)=\"selectHandler($event)\"\r\n            [disabled]=\"isDisabled || !items.length\">\r\n            <ng-container *ngIf=\"isSplitClosed\">&#9662;</ng-container>\r\n            <ng-container *ngIf=\"!isSplitClosed\">&#9652;</ng-container>\r\n        </button>\r\n    </div>\r\n    <ng-container *ngIf=\"items.length && !isSplitClosed\">\r\n        <div class=\"sub-menu\">\r\n            <div *ngFor=\"let item of items\" class=\"sub-menu__item item\">\r\n                <button class=\"item__button\" [disabled]=\"item.isDisabled || !item.onClick\"\r\n                    (click)=\"item.onClick && item.onClick!($event); selectHandler($event, true)\">{{ item.title }}</button>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CheckboxModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PageTitleModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PageTitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PageTitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SplitButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyLibModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "CheckboxModule"
                        },
                        {
                            "name": "PageTitleModule"
                        },
                        {
                            "name": "SplitButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "CheckboxModule"
                        },
                        {
                            "name": "PageTitleModule"
                        },
                        {
                            "name": "SplitButtonModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/customize-button._stories.ts",
                "type": "object",
                "defaultValue": "{\r\n    onClickTask: action('Click priority button!'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/customize-split-button._stories.ts",
                "type": "object",
                "defaultValue": "{\r\n    onClickTask: action('Click priority button!'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/default.stories.ts",
                "type": "object",
                "defaultValue": "{\r\n    onClickTask: action('Click main button!'),\r\n    onClickItem: action('Click item button!'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/ghost.stories.ts",
                "type": "object",
                "defaultValue": "{\r\n    onClickTask: action('Click main button!'),\r\n    onClickItem: action('Click item button!'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/outlined.stories.ts",
                "type": "object",
                "defaultValue": "{\r\n    onClickTask: action('Click main button!'),\r\n    onClickItem: action('Click item button!'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/split-button.stories.ts",
                "type": "object",
                "defaultValue": "{\r\n    onClickTask: action('Click main button!'),\r\n    onClickItem: action('Click item button!'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/round.stories.ts",
                "type": "object",
                "defaultValue": "{\r\n    onClickTask: action('Click priority button!'),\r\n}"
            },
            {
                "name": "baseSettings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/shared/basic-storries-settings.ts",
                "type": "object",
                "defaultValue": "{\r\n    excludeStories: /.*Data$/\r\n}"
            },
            {
                "name": "Checked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/form/checkbox.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    component: CheckboxComponent,\r\n    props: {\r\n        checked: true\r\n    },\r\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zy-lib/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Customize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/customize-button._stories.ts",
                "type": "",
                "defaultValue": "(args: any) => ({\r\n    template: `\r\n        <p>This story lets you to check all buttons settings inside Controls panel:</p>\r\n        <hr />\r\n        <zy-button\r\n            [type]=\"type\"\r\n            [color]=\"color\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span *ngIf=\"icon\" icon>{{ icon }}</span>\r\n            <ng-container *ngIf=\"type === 'split'\" split-text>{{ title }}</ng-container>\r\n            <ng-container *ngIf=\"type !== 'split'\" >{{ title }}</ng-container>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        ...args,\r\n        onClick: actionsData.onClickTask,\r\n    }\r\n})"
            },
            {
                "name": "Customize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/customize-split-button._stories.ts",
                "type": "",
                "defaultValue": "(args: any) => ({\r\n    template: `\r\n        <p>This story lets you to check all buttons settings inside Controls panel:</p>\r\n        <hr />\r\n        <zy-split-button\r\n            [color]=\"color\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span *ngIf=\"icon\" icon>{{ icon }}</span>\r\n            {{ title }}\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        ...args,\r\n        onClick: actionsData.onClickTask,\r\n    }\r\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/default.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n            disabled=\"true\"\r\n        >\r\n            Default Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/ghost.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n            disabled=\"true\"\r\n        >\r\n            Ghost Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/outlined.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"secondary\"\r\n            [disabled]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Outlined Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/split-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"primary\"\r\n            [items]=\"[{title: 'Test 1'}, {title: 'Test 2'}]\"\r\n            (onClick)=\"onClick($event)\"\r\n            disabled=\"true\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/round.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n            disabled=\"true\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/form/checkbox.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    component: CheckboxComponent,\r\n    props: {\r\n        disabled: true\r\n    },\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/default.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Default Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/ghost.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Ghost Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/outlined.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Outlined Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/round.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "PrimaryLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/default.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >Default Button</zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "PrimaryLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/outlined.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"primary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >Outlined Button</zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "PrimaryLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/round.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"primary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "PrimaryWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/default.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "PrimaryWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/ghost.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "PrimaryWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/outlined.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "PrimaryWithoutSubItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/split-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "PrimaryWithSubItemsAndCallbacks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/split-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"primary\"\r\n            [items]=\"[{title: 'Combo Item 1', onClick: onItemClick}, {title: 'Combo item 2', onClick: onItemClick}]\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask,\r\n        onItemClick: actionsData.onClickItem\r\n    },\r\n})"
            },
            {
                "name": "PrimaryWithSubItemsAndOneCallback",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/split-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"primary\"\r\n            [items]=\"[{title: 'Combo Item 1', onClick: onItemClick}, {title: 'Combo item 2'}]\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask,\r\n        onItemClick: actionsData.onClickItem\r\n    },\r\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zy-lib/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/default.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Default Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/ghost.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Ghost Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/outlined.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Outlined Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/round.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "SecondaryLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/default.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >Default Button</zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "SecondaryLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/outlined.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"secondary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >Outlined Button</zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "SecondaryLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/round.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"secondary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "SecondaryWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/default.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "SecondaryWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/ghost.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "SecondaryWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/outlined.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
            },
            {
                "name": "SecondaryWithSubItemsAndCallbacks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/buttons/split-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"secondary\"\r\n            [items]=\"[{title: 'Combo Item 1', onClick: onItemClick}, {title: 'Combo item 2', onClick: onItemClick}]\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask,\r\n        onItemClick: actionsData.onClickItem\r\n    },\r\n})"
            },
            {
                "name": "Unchecked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/components/form/checkbox.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    component: CheckboxComponent,\r\n    props: {\r\n        checked: false\r\n    },\r\n})"
            }
        ],
        "functions": [
            {
                "name": "myService",
                "file": "projects/zy-lib/schematics/zy-add-story/index.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "options"
                    }
                ],
                "returnType": "Rule",
                "jsdoctags": [
                    {
                        "name": "options",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "ButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"round\" | \"outlined\" | \"ghost\"",
                "file": "projects/zy-lib/src/lib/button/models/button.types.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\"",
                "file": "projects/zy-lib/src/lib/shared/models/color.types.ts",
                "description": "",
                "kind": 168
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "stories/components/buttons/customize-button._stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/customize-button._stories.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    onClickTask: action('Click priority button!'),\r\n}"
                },
                {
                    "name": "Customize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/customize-button._stories.ts",
                    "type": "",
                    "defaultValue": "(args: any) => ({\r\n    template: `\r\n        <p>This story lets you to check all buttons settings inside Controls panel:</p>\r\n        <hr />\r\n        <zy-button\r\n            [type]=\"type\"\r\n            [color]=\"color\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span *ngIf=\"icon\" icon>{{ icon }}</span>\r\n            <ng-container *ngIf=\"type === 'split'\" split-text>{{ title }}</ng-container>\r\n            <ng-container *ngIf=\"type !== 'split'\" >{{ title }}</ng-container>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        ...args,\r\n        onClick: actionsData.onClickTask,\r\n    }\r\n})"
                }
            ],
            "stories/components/buttons/customize-split-button._stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/customize-split-button._stories.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    onClickTask: action('Click priority button!'),\r\n}"
                },
                {
                    "name": "Customize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/customize-split-button._stories.ts",
                    "type": "",
                    "defaultValue": "(args: any) => ({\r\n    template: `\r\n        <p>This story lets you to check all buttons settings inside Controls panel:</p>\r\n        <hr />\r\n        <zy-split-button\r\n            [color]=\"color\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span *ngIf=\"icon\" icon>{{ icon }}</span>\r\n            {{ title }}\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        ...args,\r\n        onClick: actionsData.onClickTask,\r\n    }\r\n})"
                }
            ],
            "stories/components/buttons/default.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/default.stories.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    onClickTask: action('Click main button!'),\r\n    onClickItem: action('Click item button!'),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/default.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n            disabled=\"true\"\r\n        >\r\n            Default Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/default.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Default Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/default.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >Default Button</zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/default.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/default.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Default Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "SecondaryLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/default.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"primary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >Default Button</zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "SecondaryWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/default.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"default\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                }
            ],
            "stories/components/buttons/ghost.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/ghost.stories.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    onClickTask: action('Click main button!'),\r\n    onClickItem: action('Click item button!'),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/ghost.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n            disabled=\"true\"\r\n        >\r\n            Ghost Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/ghost.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Ghost Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/ghost.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/ghost.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Ghost Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "SecondaryWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/ghost.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"ghost\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                }
            ],
            "stories/components/buttons/outlined.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/outlined.stories.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    onClickTask: action('Click main button!'),\r\n    onClickItem: action('Click item button!'),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/outlined.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"secondary\"\r\n            [disabled]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Outlined Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/outlined.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Outlined Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/outlined.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"primary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >Outlined Button</zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/outlined.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/outlined.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Outlined Button\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "SecondaryLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/outlined.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"secondary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >Outlined Button</zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "SecondaryWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/outlined.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"outlined\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>With Icon\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                }
            ],
            "stories/components/buttons/split-button.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/split-button.stories.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    onClickTask: action('Click main button!'),\r\n    onClickItem: action('Click item button!'),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/split-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"primary\"\r\n            [items]=\"[{title: 'Test 1'}, {title: 'Test 2'}]\"\r\n            (onClick)=\"onClick($event)\"\r\n            disabled=\"true\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryWithoutSubItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/split-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryWithSubItemsAndCallbacks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/split-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"primary\"\r\n            [items]=\"[{title: 'Combo Item 1', onClick: onItemClick}, {title: 'Combo item 2', onClick: onItemClick}]\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask,\r\n        onItemClick: actionsData.onClickItem\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryWithSubItemsAndOneCallback",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/split-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"primary\"\r\n            [items]=\"[{title: 'Combo Item 1', onClick: onItemClick}, {title: 'Combo item 2'}]\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask,\r\n        onItemClick: actionsData.onClickItem\r\n    },\r\n})"
                },
                {
                    "name": "SecondaryWithSubItemsAndCallbacks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/split-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-split-button\r\n            color=\"secondary\"\r\n            [items]=\"[{title: 'Combo Item 1', onClick: onItemClick}, {title: 'Combo item 2', onClick: onItemClick}]\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            Primary Button\r\n        </zy-split-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask,\r\n        onItemClick: actionsData.onClickItem\r\n    },\r\n})"
                }
            ],
            "stories/components/buttons/round.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/round.stories.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    onClickTask: action('Click priority button!'),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/round.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n            disabled=\"true\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/round.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"primary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "PrimaryLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/round.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"primary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/round.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"secondary\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                },
                {
                    "name": "SecondaryLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/buttons/round.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n        <zy-button\r\n            type=\"round\"\r\n            color=\"secondary\"\r\n            [isLoading]=\"true\"\r\n            (onClick)=\"onClick($event)\"\r\n        >\r\n            <span icon>+</span>\r\n        </zy-button>\r\n    `,\r\n    props: {\r\n        onClick: actionsData.onClickTask\r\n    },\r\n})"
                }
            ],
            "stories/shared/basic-storries-settings.ts": [
                {
                    "name": "baseSettings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/shared/basic-storries-settings.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    excludeStories: /.*Data$/\r\n}"
                }
            ],
            "stories/components/form/checkbox.stories.ts": [
                {
                    "name": "Checked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/form/checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    component: CheckboxComponent,\r\n    props: {\r\n        checked: true\r\n    },\r\n})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/form/checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    component: CheckboxComponent,\r\n    props: {\r\n        disabled: true\r\n    },\r\n})"
                },
                {
                    "name": "Unchecked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/components/form/checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    component: CheckboxComponent,\r\n    props: {\r\n        checked: false\r\n    },\r\n})"
                }
            ],
            "projects/zy-lib/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zy-lib/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zy-lib/src/test.ts",
                    "type": "literal type"
                }
            ]
        },
        "groupedFunctions": {
            "projects/zy-lib/schematics/zy-add-story/index.ts": [
                {
                    "name": "myService",
                    "file": "projects/zy-lib/schematics/zy-add-story/index.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "options"
                        }
                    ],
                    "returnType": "Rule",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/zy-lib/src/lib/button/models/button.types.ts": [
                {
                    "name": "ButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"round\" | \"outlined\" | \"ghost\"",
                    "file": "projects/zy-lib/src/lib/button/models/button.types.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "projects/zy-lib/src/lib/shared/models/color.types.ts": [
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\"",
                    "file": "projects/zy-lib/src/lib/shared/models/color.types.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/zy-lib/schematics/zy-add-story/index.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "myService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/schematics/zy-add-story/schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Schema",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/lib/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/lib/page-title/page-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/lib/shared/components/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/lib/split-button/models/split-button-item.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SplitButtonItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/lib/split-button/split-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SplitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/lib/zy-lib.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyLibService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zy-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/customize-button._stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/customize-button._stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Customize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/customize-split-button._stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/customize-split-button._stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Customize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/ghost.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/ghost.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/ghost.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/ghost.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/ghost.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/ghost.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/outlined.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/outlined.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/outlined.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/outlined.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/outlined.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/outlined.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/outlined.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/outlined.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/round.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/round.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/round.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/round.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/round.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/round.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/split-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/split-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/split-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryWithoutSubItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/split-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryWithSubItemsAndCallbacks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/split-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryWithSubItemsAndOneCallback",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/buttons/split-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryWithSubItemsAndCallbacks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/form/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/form/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/components/form/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Unchecked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/shared/basic-storries-settings.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baseSettings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}